<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="RoomInfoRemote.Views.CalendarPage"
             xmlns:syncfusion="clr-namespace:Syncfusion.SfCalendar.XForms;assembly=Syncfusion.SfCalendar.XForms"
             xmlns:syncfusionbuttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:behaviors="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"             
             xmlns:extension="clr-namespace:RoomInfoRemote.Extension;assembly=RoomInfoRemote"
             xmlns:helpers="clr-namespace:RoomInfoRemote.Helpers;assembly=RoomInfoRemote">    
    <ContentPage.Resources>
        <ResourceDictionary>
            <helpers:InlineItemTappedEventArgsConverter x:Key="inlineItemTappedEventArgsConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <AbsoluteLayout>
            <syncfusion:SfCalendar x:Name="calendar" ViewMode="MonthView" ShowInlineEvents="true" InlineViewMode="Inline" DataSource="{Binding CalendarInlineEvents}" Locale="{Binding CultureInfo}">
                <syncfusion:SfCalendar.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="InlineItemTapped" Command="{Binding OpenReservationPopupCommand}" EventArgsConverter="{StaticResource inlineItemTappedEventArgsConverter}" />
                </syncfusion:SfCalendar.Behaviors>
            </syncfusion:SfCalendar>
            <Button x:Name="extensionButton" AbsoluteLayout.LayoutBounds=".5,1,.75,.1" AbsoluteLayout.LayoutFlags="All" Text="{extension:Translate RoomsPage_ReservationExtensionButton_Text}" IsVisible="{Binding IsExtensionButtonVisible}" Command="{Binding ExtendCurrentReservationCommand}"/>
            <ContentView x:Name="reservationContentView" BackgroundColor="#D9808080" IsVisible="{Binding IsReservationContentViewVisible}" HorizontalOptions="Start" VerticalOptions="Center" Padding="12,0,12,0" HeightRequest="{Binding Source={x:Reference calendar},Path=Height}">
                <ScrollView >
                    <StackLayout x:Name="reservationStackLayout" HorizontalOptions="Start" Margin="0,12,0,12">
                        <Entry Text="{Binding AgendaItem.Title, Mode=TwoWay}" HorizontalOptions="FillAndExpand" Placeholder="{extension:Translate RoomPage_ReservationTitle_Placeholder}"/>
                        <Grid x:Name="grid" Margin="0,8,0,0" HorizontalOptions="Start">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DatePicker x:Name="startDate" Grid.Row="0" Date="{Binding AgendaItem.Start.Date, Mode=TwoWay}" >
                                <DatePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="PropertyChanged" Command="{Binding UpdateValueFromPickerCommand}" CommandParameter="{Binding Source={x:Reference startDate}}"/>
                                </DatePicker.Behaviors>
                            </DatePicker>
                            <syncfusionbuttons:SfCheckBox x:Name="allDaySfCheckBox" Grid.Row="0" Grid.Column="1" Text="{extension:Translate RoomPage_AllDayButton_Text}" IsChecked="{Binding AgendaItem.IsAllDayEvent}" >
                                <syncfusionbuttons:SfCheckBox.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="StateChanged" Command="{Binding ChangeStateCommand}" CommandParameter="{Binding Source={x:Reference allDaySfCheckBox}, Path=IsChecked}"/>
                                </syncfusionbuttons:SfCheckBox.Behaviors>
                            </syncfusionbuttons:SfCheckBox>
                            <TimePicker x:Name="startTime" Grid.Row="1" Time="{Binding AgendaItem.Start.TimeOfDay, Mode=TwoWay}" HorizontalOptions="Center" WidthRequest="{Binding Source={x:Reference startDate}, Path=Width}">
                                <TimePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="PropertyChanged" Command="{Binding UpdateValueFromPickerCommand}" CommandParameter="{Binding Source={x:Reference startTime}}"/>
                                </TimePicker.Behaviors>
                            </TimePicker>

                            <DatePicker x:Name="endDate" Grid.Row="2" Date="{Binding AgendaItem.End.Date, Mode=TwoWay}" Margin="0,8,0,0">
                                <DatePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="PropertyChanged" Command="{Binding UpdateValueFromPickerCommand}" CommandParameter="{Binding Source={x:Reference endDate}}"/>
                                </DatePicker.Behaviors>
                            </DatePicker>
                            <TimePicker x:Name="endTime" Grid.Row="3" Time="{Binding AgendaItem.End.TimeOfDay, Mode=TwoWay}" HorizontalOptions="Center" WidthRequest="{Binding Source={x:Reference startDate}, Path=Width}">
                                <TimePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="PropertyChanged" Command="{Binding UpdateValueFromPickerCommand}" CommandParameter="{Binding Source={x:Reference endTime}}"/>
                                </TimePicker.Behaviors>
                            </TimePicker>
                            <Picker Grid.Row="4" SelectedIndex="{Binding AgendaItem.Occupancy, Mode=TwoWay}" Margin="0,8,0,0" >
                                <Picker.Items>
                                    <extension:Translate Text="RoomsPage_Occupancy_Free"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Present"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Absent"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Busy"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Occupied"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Locked"/>
                                    <extension:Translate Text="RoomsPage_Occupancy_Home"/>
                                </Picker.Items>
                            </Picker>
                        </Grid>

                        <Editor Text="{Binding AgendaItem.Description, Mode=TwoWay, UpdateSourceEventName=ValueChanged}" Margin="0,8,0,0" HorizontalOptions="FillAndExpand" Placeholder="{extension:Translate RoomPage_ReservationDescription_Placeholder}" />

                        <Grid x:Name="bottomButtonGrid" Margin="0,8,0,0" HorizontalOptions="Center" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Text="{extension:Translate RoomPage_CancelButton_Text}" Command="{Binding CloseReservationPopupCommand}" HorizontalOptions="Start"/>
                            <Button Grid.Column="1" Text="{extension:Translate RoomPage_DeleteButton_Text}" Command="{Binding DeleteReservationPopupCommand}" HorizontalOptions="Center"/>
                            <Button Grid.Column="2" Text="{extension:Translate RoomPage_SaveButton_Text}" Command="{Binding AddOrSaveAgendaItemCommand}" HorizontalOptions="End"/>
                        </Grid>
                    </StackLayout>
                </ScrollView>
            </ContentView>
        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>